//////////////////////////////////////////////////////////////////////////////
// Product: PC-Lint 9.x option file for linting QP-nano applications
// Last Updated for Version: 4.5.04
// Date of the Last Update:  Feb 02, 2013
//
//                    Q u a n t u m     L e a P s
//                    ---------------------------
//                    innovating embedded systems
//
// Copyright (C) 2002-2013 Quantum Leaps, LLC. All rights reserved.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
//
// Alternatively, this program may be distributed and modified under the
// terms of Quantum Leaps commercial licenses, which expressly supersede
// the GNU General Public License and are specifically designed for
// licensees interested in retaining the proprietary status of their code.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
// Contact information:
// Quantum Leaps Web sites: http://www.quantum-leaps.com
//                          http://www.state-machine.com
// e-mail:                  info@quantum-leaps.com
//////////////////////////////////////////////////////////////////////////////

// general
-emacro((960), Q_DIM)         // MISRA04-17.4(req) pointer arithmetic
-emacro(923, Q_UINT2PTR_CAST) // MISRA04-11.1(req) cast from int to pointer
-estring(961,                 // MISRA04-19.7(adv) function-like macro
 Q_DIM,
 Q_UINT2PTR_CAST)
-emacro(866, Q_DIM)           // Unusual use of 'SYM' in argument to sizeof
-esym(960,                    // MISRA04-19.10(req) unparenthesized macro par
 Q_DIM,
 Q_UINT2PTR_CAST)

// Assertions
-estring(960, l_this_file)    // MISRA04-8.7(req) could use block scope
-estring(961,                 // MISRA04-19.7(adv) function-like macro
 Q_ASSERT,
 Q_ASSERT_ID,
 Q_ALLEGE,
 Q_ALLEGE_ID,
 Q_ERROR,
 Q_ERROR_ID,
 Q_REQUIRE,
 Q_REQUIRE_ID,
 Q_ENSURE,
 Q_ENSURE_ID,
 Q_INVARIANT,
 Q_INVARIANT_ID,
 Q_ASSERT_COMPILE,
 Q_DEFINE_THIS_MODULE)
-esym(960,                    // MISRA04-19.4(req) Disallowed macro definition
 Q_ALLEGE,
 Q_ALLEGE_ID,
 Q_ERROR,
 Q_ERROR_ID,
 Q_REQUIRE,
 Q_REQUIRE_ID,
 Q_ENSURE,
 Q_ENSURE_ID,
 Q_INVARIANT,
 Q_INVARIANT_ID,
 Q_DEFINE_THIS_FILE,
 Q_ASSERT_COMPILE)
-esym(960,                    // MISRA04-19.10(req) unparenthesized macro par
 Q_DEFINE_THIS_MODULE)
-emacro(522,                  // Highest operation lacks side-effects 
 Q_ASSERT,
 Q_ERROR,
 Q_ALLEGE)
-function(exit, Q_onAssert)   // give Q_onAssert() the semantics of "exit"
-estring(752,Q_assert_compile) // not referenced

// QEP-nano
-emacro(740,                  // MISRA04-1.2(req) pointer cast
 Q_SIG,
 Q_PAR,
 Q_TRAN,
 Q_SUPER,
 Q_STATE_CAST)
-emacro(960,                  // MISRA04-12.10(req) comma operator used
 Q_TRAN,
 Q_SUPER)
-emacro(929,                  // MISRA04-11.4(adv) cast pointer to pointer
 Q_SIG,
 Q_PAR,
 Q_STATE_CAST,
 Q_TRAN,
 Q_SUPER,
 Q_EVENT_CAST)
-emacro(960, Q_STATE_CAST)    // MISRA04-11.1(req) Conversions involving
                              // fun. pointers must be to/from integral types
-estring(961,                 // MISRA04-19.7(adv) function-like macro
 Q_SIG,
 Q_PAR,
 Q_ROM_BYTE,
 QFsm_ctor,
 QHsm_ctor,
 QHsm_state,
 Q_IGNORED,
 Q_HANDLED,
 Q_UNHANDLED,
 Q_TRAN,
 Q_SUPER,
 Q_STATE_CAST)

// QF-nano
-emacro(740, QF_ACTIVE_CAST)  // MISRA04-1.2(req) incompatible indirect types
-emacro(826, QF_ACTIVE_CAST)  // suspicious pointer-to-pointer conversion
-emacro(950,                  // MISRA04-2.1(req) assembly language 
 QF_INT_DISABLE,
 QF_INT_ENABLE,
 QF_ISR_DISABLE,
 QF_ISR_RESTORE)
-emacro(929,                  // MISRA04-11.4(adv) cast pointer to pointer
 QF_ACTIVE_CAST)
-esym(960,                    // MISRA04-19.4(req) Disallowed macro definition
 QF_INT_DISABLE,
 QF_INT_ENABLE)
-estring(961,                 // MISRA04-19.7(adv) function-like macro
 QF_INT_DISABLE,
 QF_INT_ENABLE,
 QF_ISR_DISABLE,
 QF_ISR_RESTORE,
 QF_LOG2,
 Q_ROM_PTR,
 QF_tick,
 QActive_ctor,
 QF_ACTIVE_CAST,
 QF_ROM_QUEUE_AT_,
 QF_ROM_ACTIVE_GET_)
-esym(960,                    // MISRA04-19.4(req) Disallowed macro definition
 QFsm_ctor,
 QHsm_ctor,
 QActive_ctor)
-ecall(826,                   // pointer-to-pointer conv. (area too small)
 QActive_post,
 QActive_postISR)

// QK-nano
-emacro(950,                  // MISRA04-2.1(req) assembly language 
 QK_ISR_ENTRY,
 QK_ISR_EXIT)
-esym(960,                    // MISRA04-19.4(req) Disallowed macro definition
 QK_SCHEDULE_)
-estring(961,                 // MISRA04-19.7(adv) function-like macro
 QK_ISR_ENTRY,
 QK_ISR_EXIT,
 QK_SCHEDULE_)


// Miscallaneous
-estring(793,6)   // ANSI/ISO limit of 6 significant chars exceeded
-e546             // Suspicious use of &


