/**
\page files_page Directories and Files in the QP-nano Distribution

The following annotated directory tree lists the most important directories
and files provided in the standard QP-nano distribution.
\code
qpn\                 - QP-nano root directory
  |
  +-qpn.chm          - "QP-nano Reference Manual" in CHM Help format
  |
  +-doxygen\         - QP documentation generated with Doxygen
  | +-html\          - "QP-nano Reference Manual" in HTML format
  | | +-index.html   - The HTML index page for the "QP-nano Reference Manual"
  | | +- . . .
  | +-Doxyfile       - Doxygen configuration file to generate the Manual
  | +- . . .
  |
  +-examples\        - QP-nano examples
  | | +-posix\       - Examples for POSIX (Linux, BSD, etc.)
  | | | +-gnu\       - Examples with the GNU compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example for Linux
  | | | | | +-dbg\   - Debug build
  | | | | | +-rel\     - Release build
  | | | | | +-spy\     - Spy build (with software instrumentation)
  | | | | | +-dpp.qm   - QM model file for this project
  | | | | | +-Makefile - GNU Makefile to build the DPP application
  | | | | | +-. . .
  | | |
  | | +-win32\       - Examples for Win32 (Windows)
  | | | +-mingw\     - Examples for the MinGW (GNU) compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example for Linux
  | | | | | +-dbg\   - Debug build
  | | | | | | +-dpp.exe - DPP executable (Debug configuration)
  | | | | | +-rel\      - Release build
  | | | | | +-spy\      - Spy build (with software tracing)
  | | | | | +-dpp.qm    - QM model file for this project
  | | | | | +-Makefile  - GNU Makefile to build the DPP application
  | | | | | +-. . .
  | | | | +-game-gui\   - "Fly 'n' Shoot" game example (GUI)
  | | | |
  | | | +-vc\        - Examples for the Visual C++ compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example (console)
  | | | | | +-Debug\    - Debug build
  | | | | | | +-dpp.exe - DPP executable (Debug configuration)
  | | | | | +-Release\  - Release build
  | | | | | +-Spy\      - Spy build (with software instrumentation)
  | | | | | +-dpp.qm    - QM model file for this project
  | | | | | +-dpp.sln     - Visual Studio solution file
  | | | | | +-dpp.vcxproj - Visual Studio project file
  | | | | | +-. . .
  | | | | +-dpp-gui\    - Dining Philosopher Problem (DPP) example (GUI)
  | | | | +-game-gui\   - "Fly 'n' Shoot" game example (GUI)
  | |
  | +-80x86\         - Examples for the 80x86 processor
  | | +-watcom\      - Examples with the Open Watcom compiler
  | | | +-dpp\       - Dining Philosopher Problem (DPP) example (non-preemptive)
  | | | | +-dbg\     - Debug build
  | | | | | +-dpp.exe    - Debug executable
  | | | | +-make.bat     - batch script to build the application
  | | | | +-qpn_port.h   - QP-nano port for this specific application  
  | | | | +- . . .
  | | | |
  | | | +-dpp-qk\     - DPP example with the preemptive QK-nano kernel
  | | | | | +-dpp-qk.exe - Debug executable
  | | | | +-make.bat     - batch script to build the Debug   version
  | | | | +-qpn_port.h   - QP-nano port for this specific application  
  | | | | +- . . .
  | | | |
  | | | +-game\       - "Fly 'n' Shoot" game example (non-preemptive kernel)
  | | | | +-dbg\      - Debug build
  | | | | | +-GAME.EXE   - Debug executable
  | | | | +-make.bat  - batch script to build the Debug version
  | | | | +-game.h    - The application header file
  | | | | +-bsp.c     - BSP for the application
  | | | | +-main.c    - main() function
  | | | | +-qpn_port.h   - QP-nano port for this specific application  
  | | | | +- . . .
  | | | |
  | | | +-game-qk\    - "Fly 'n' Shoot" game with the preemptive QK-nano kernel
  | | | | +- . . .
  | | | |
  | | | +-pelican\    - PELICAN crossing example (non-preemptive kernel)
  | | | | +- . . .
  | | | |
  | | | +-pelican-qk\ - PELICAN crossing with the preemptive QK-nano kernel
  | | | | +- . . .
  | | | |
  | | | +-comp\       - "Orthogonal Component" pattern (PSiCC2 Chapter 5)
  | | | +-defer\      - "Deferred Event" pattern (PSiCC2 Chapter 5)
  | | | +-history\    - "Transition to History" pattern (PSiCC2 Chapter 5)
  | | | +-hook\       - "Ultimate Hook" pattern (Chapter 5)
  | | | +-reminder\   - "Reminder" pattern (PSiCC2 Chapter 5)
  | | |
  | |
  | +-arm-cortex\     - Examples for ARM Cortex processor
  | | +-iar\          - Examples with the IAR compiler
  | | | +-game-ev-lm3s811\       - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | +-game-qk-ev-lm3s811\    - "Fly 'n' Shoot" example with QK-nano
  | | | +-pelican-ev-lm3s811\    - PELICAN example for EV-LM3S811 board
  | | | +-pelican-qk-ev-lm3s811\ - PELICAN example with QK-nano
  | | | +-. . .       - Other examples for ARM Cortex
  | | |
  | | +-gnu\          - Examples with the GNU compiler (Code Sourcery G++)
  | | | +-game-ev-lm3s811\       - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | +-game-qk-ev-lm3s811\    - "Fly 'n' Shoot" example with QK-nano
  | | | +-pelican-ev-lm3s811\    - PELICAN example for EV-LM3S811 board
  | | | +-pelican-qk-ev-lm3s811\ - PELICAN example with QK-nano
  | | | +-. . .       - Other examples for ARM Cortex
  | |
  | +-msp430\         - Examples for MSP430 processor
  | | +-iar\          - Examples with the IAR compiler
  | | | +-bomb-eZ430\       - Time Bomb example for eZ430 board
  | | | +-bomb-qk-eZ430\    - Time Bomb example with QK-nano
  | | | +-game-eZ430\       - "Fly 'n' Shoot" example for eZ430 board
  | | | +-game-qk-eZ430\    - "Fly 'n' Shoot" example with QK-nano
  | | | +-pelican-eZ430\    - PELICAN example for eZ430 board
  | | | +-pelican-qk-eZ430\ - PELICAN example with QK-nano
  | | | +-. . .      - Other examples for MSP430
  | |
  | +-. . .          - Examples for other CPUs and compilers
  |
  +-include\         - QP-nano platform-independent header files
  | +-qassert.h      - QP-nano assertions
  | +-qepn.h         - QEP-nano platform-independent interface
  | +-qfn.h          - QF-nano platform-independent interface
  | +-qkn.h          - QK-nano platform-independent interface
  |
  +-source\          - QP-nano platform-independent source code (*.c files)
  | +-qepn.c         - QEP-nano platform-independent source code
  | +-qfn.c          - QF-nano  platform-independent source code
  | +-qkn.c          - QK-nano  platform-independent source code
  | | +- . . .
  |
  +-ports\           - Platform-specific QP-nano ports and emulations
  | +-posix\         - Ports to the POSIX operating systems (Linux, BSD, etc.)
  | | +-gnu\         - Ports with the GNU compiler
  | | | +-. . .
  | |
  | +-win32\         - Ports to the POSIX operating systems (Linux, BSD, etc.)
  | | +-mingw\       - Port with the MinGW (GNU) compiler
  | | | +-. . .
  | | |
  | | +-vc\          - Port with the Visual C++ compiler
  | |
\endcode

\image html logo_ql_TM.jpg
Copyright &copy; 2002-2012 Quantum Leaps, LLC. All Rights Reserved.
*/